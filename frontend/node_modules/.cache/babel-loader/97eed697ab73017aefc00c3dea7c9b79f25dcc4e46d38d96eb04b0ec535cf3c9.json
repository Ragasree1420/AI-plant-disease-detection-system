{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gadda\\\\Downloads\\\\Plant Disease-Backup - Copy\\\\ps\\\\ps\\\\frontend\\\\src\\\\pages\\\\faq\\\\faq.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./faq.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FAQ = () => {\n  const faqs = [{\n    question: \"What is the goal of this website?\",\n    answer: \"Provide a tool to quickly identify diseases, enabling timely intervention to prevent crop loss. Reduce the need for expensive lab tests or frequent expert consultations by offering an affordable and easy-to-use alternative.\"\n  }, {\n    question: \"How does the model perform under real-world conditions?\",\n    answer: \"Performance may degrade under poor lighting, occlusion, or noise. However, robust training with diverse, augmented data can improve real-world applicability.\"\n  }, {\n    question: \"What types of files can I upload?\",\n    answer: \"You can upload image files in common formats such as JPEG, PNG, and BMP. Ensure the images are clear and not excessively compressed for best results.\"\n  }, {\n    question: \"What is the accuracy of the model?\",\n    answer: \"The model's accuracy depends on the dataset and training quality. Typically, a well-trained CNN can achieve accuracies between 85% and 98% for plant disease detection tasks.\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"faq-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"faq-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"faq-subheading\",\n        children: \"FREQUENTLY ASKED QUESTIONS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"faq-heading\",\n        children: [\"Questions? \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"highlight\",\n          children: \"We\\u2019ve Got Answers.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"faq-content\",\n      children: faqs.map((faq, index) => /*#__PURE__*/_jsxDEV(FAQItem, {\n        question: faq.question,\n        answer: faq.answer\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_c = FAQ;\nconst FAQItem = ({\n  question,\n  answer\n}) => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"faq-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"faq-question\",\n      onClick: () => setIsOpen(!isOpen),\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"toggle-btn\",\n        children: isOpen ? \"−\" : \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"faq-answer\",\n      children: answer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(FAQItem, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c2 = FAQItem;\nexport default FAQ;\nvar _c, _c2;\n$RefreshReg$(_c, \"FAQ\");\n$RefreshReg$(_c2, \"FAQItem\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FAQ","faqs","question","answer","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","faq","index","FAQItem","_c","_s","isOpen","setIsOpen","onClick","_c2","$RefreshReg$"],"sources":["C:/Users/gadda/Downloads/Plant Disease-Backup - Copy/ps/ps/frontend/src/pages/faq/faq.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./faq.css\";\r\n\r\nconst FAQ = () => {\r\n  const faqs = [\r\n    {\r\n      question: \"What is the goal of this website?\",\r\n      answer:\r\n        \"Provide a tool to quickly identify diseases, enabling timely intervention to prevent crop loss. Reduce the need for expensive lab tests or frequent expert consultations by offering an affordable and easy-to-use alternative.\",\r\n    },\r\n    {\r\n      question: \"How does the model perform under real-world conditions?\",\r\n      answer:\r\n        \"Performance may degrade under poor lighting, occlusion, or noise. However, robust training with diverse, augmented data can improve real-world applicability.\",\r\n    },\r\n    {\r\n      question: \"What types of files can I upload?\",\r\n      answer:\r\n        \"You can upload image files in common formats such as JPEG, PNG, and BMP. Ensure the images are clear and not excessively compressed for best results.\",\r\n    },\r\n    {\r\n      question: \"What is the accuracy of the model?\",\r\n      answer:\r\n        \"The model's accuracy depends on the dataset and training quality. Typically, a well-trained CNN can achieve accuracies between 85% and 98% for plant disease detection tasks.\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"faq-container\">\r\n      <div className=\"faq-header\">\r\n        <h3 className=\"faq-subheading\">FREQUENTLY ASKED QUESTIONS</h3>\r\n        <h2 className=\"faq-heading\">\r\n          Questions? <span className=\"highlight\">We’ve Got Answers.</span>\r\n        </h2>\r\n      </div>\r\n      <div className=\"faq-content\">\r\n        {faqs.map((faq, index) => (\r\n          <FAQItem key={index} question={faq.question} answer={faq.answer} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst FAQItem = ({ question, answer }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  return (\r\n    <div className=\"faq-item\">\r\n      <div className=\"faq-question\" onClick={() => setIsOpen(!isOpen)}>\r\n        <span>{question}</span>\r\n        <button className=\"toggle-btn\">{isOpen ? \"−\" : \"+\"}</button>\r\n      </div>\r\n      {isOpen && <p className=\"faq-answer\">{answer}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FAQ;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}